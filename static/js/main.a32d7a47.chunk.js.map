{"version":3,"sources":["components/LocationMarker.js","components/LocationInfoBox.js","components/Map.js","components/spinner.gif","components/Loader.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["LocationMarker","lat","lng","eventId","onClick","locationIcons","8","fireIcon","10","severeStormIcon","className","icon","LocationInfoBox","info","id","title","Map","eventData","center","zoom","useState","locationInfo","setLocationInfo","markers","map","ev","categories","geometries","coordinates","link","bootstrapURLKeys","key","process","defaultCenter","defaultZoom","defaultProps","eventID","Loader","src","spinner","Header","locationIcon","App","setEventData","loading","setLoading","useEffect","a","fetch","res","json","events","fetchEvents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAqBeA,G,MAhBQ,SAAC,GAAiC,EAAhCC,IAAgC,EAA3BC,IAA4B,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,QAClCC,EAAgB,CAClBC,EAAGC,IACHC,GAAIC,KAMR,OACI,qBAAKC,UAAU,kBAAkBN,QAASA,EAA1C,SACI,cAAC,OAAD,CAAMO,KAAMN,EAAcF,GAAUO,UANlB,CACtBJ,EAAG,YACHE,GAAI,cAIiEL,SCC9DS,EAdS,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACtB,OACI,sBAAKH,UAAU,gBAAf,UACI,uDAEA,+BACI,sCAAQ,uCAAWG,EAAKC,GAAhB,UACR,0CAAY,mCAASD,EAAKE,MAAd,OAAZ,cCNVC,EAAM,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAAU,EAECC,mBAAS,MAFV,mBAEhCC,EAFgC,KAElBC,EAFkB,KAGjCC,EAAUN,EAAUO,KAAI,SAAAC,GAC1B,OAA2B,IAAxBA,EAAGC,WAAW,GAAGZ,IAAoC,KAAxBW,EAAGC,WAAW,GAAGZ,GACtC,cAAC,EAAD,CAAgBb,IAAKwB,EAAGE,WAAW,GAAGC,YAAY,GAAK1B,IAAKuB,EAAGE,WAAW,GAAGC,YAAY,GAAIzB,QAASsB,EAAGC,WAAW,GAAGZ,GAC9HV,QAAS,kBAAMkB,EAAgB,CAAER,GAAIW,EAAGX,GAAIC,MAAOU,EAAGV,MAAOc,KAAMJ,EAAGI,UAEnE,QAIX,OACI,sBAAKnB,UAAU,MAAf,UACI,cAAC,IAAD,CACGoB,iBAAkB,CAAEC,IALfC,2CAMLC,cAAef,EACfgB,YAAaf,EAHhB,SAKKI,IAEJF,GAAgB,cAAC,EAAD,CAAiBR,KAAMQ,QAKpDL,EAAImB,aAAa,CACbjB,OAAQ,CACJjB,IAAK,QACLC,KAAM,SACNkC,QAAS,GAEbjB,KAAM,GAEKH,QCtCA,MAA0B,oCCW1BqB,EATA,WACX,OACI,sBAAK3B,UAAU,SAAf,UACI,qBAAK4B,IAAKC,IACV,mDCKGC,EARA,WACX,OACI,wBAAQ9B,UAAU,SAAlB,SACI,mCAAK,cAAC,OAAD,CAAMC,KAAM8B,MAAjB,6CCwBGC,MAzBf,WAAgB,IAAD,EAEoBtB,mBAAS,IAF7B,mBAEPH,EAFO,KAEI0B,EAFJ,OAGgBvB,oBAAS,GAHzB,mBAGPwB,EAHO,KAGEC,EAHF,KAiBb,OAZAC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,6DAClBF,GAAW,GADO,SAEAG,MAAM,mDAFN,cAEZC,EAFY,gBAGKA,EAAIC,OAHT,gBAGXC,EAHW,EAGXA,OAEPR,EAAaQ,GACbN,GAAW,GANO,4CAAH,qDASjBO,KACC,IAED,gCACE,cAAC,EAAD,IACER,EAA0C,cAAC,EAAD,IAAhC,cAAC,EAAD,CAAK3B,UAAWA,QCbnBoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,EAAQ,IAAUC,SAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.a32d7a47.chunk.js","sourcesContent":["import {Icon} from '@iconify/react'\nimport fireIcon from '@iconify/icons-mdi/fire-alert' \nimport hurricaneIcon from '@iconify/icons-mdi/hurricane.js'\nimport severeStormIcon from '@iconify/icons-mdi/storm-advisory'\nimport defaultIcon from '@iconify/icons-mdi/hamburger'\nconst LocationMarker = ({lat, lng, eventId, onClick}) => {\n    const locationIcons = {\n        8: fireIcon,\n        10: severeStormIcon\n    }\n    const locationIconNames = {\n        8: \"fire-icon\",\n        10: \"storm-icon\"\n    }\n    return (\n        <div className=\"location-marker\" onClick={onClick}>\n            <Icon icon={locationIcons[eventId]} className={locationIconNames[eventId]} />\n        </div>\n    )\n}\n\nexport default LocationMarker\n","import React from 'react'\nimport LocationMarker from './LocationMarker'\n\nconst LocationInfoBox = ({info}) => {\n    return (\n        <div className=\"location-info\">\n            <h2> Event Location Info </h2>\n\n            <ul>\n                <li>ID: <strong> { info.id } </strong></li>\n                <li> Title: <strong>{info.title} </strong> </li>\n                {/* <li> Event Link: <a href={info.link}> {info.link} </a></li> */}\n            </ul>\n        </div>\n    )\n}\n\nexport default LocationInfoBox\n","import {useState} from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport LocationMarker from './LocationMarker'\nimport LocationInfoBox from './LocationInfoBox'\nconst Map = ({eventData, center, zoom}) => {\n\n    const [locationInfo, setLocationInfo] = useState(null)\n    const markers = eventData.map(ev=> {\n        if(ev.categories[0].id === 8 || ev.categories[0].id === 10){\n            return <LocationMarker lat={ev.geometries[0].coordinates[1]}  lng={ev.geometries[0].coordinates[0]} eventId={ev.categories[0].id}  \n            onClick={() => setLocationInfo({ id: ev.id, title: ev.title, link: ev.link})} />\n        }\n        return null; \n    })\n    const gmapkey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n\n    return (\n        <div className=\"map\">\n            <GoogleMapReact\n               bootstrapURLKeys={{ key: gmapkey}} \n               defaultCenter={center}\n               defaultZoom={zoom}\n               >\n                {markers}   \n            </GoogleMapReact>\n            {locationInfo && <LocationInfoBox info={locationInfo} />}\n        </div>\n    )\n}\n\nMap.defaultProps={\n    center: {\n        lat: 42.3265,\n        lng: -122.8756,\n        eventID: 2\n    },\n    zoom: 6\n}\nexport default Map\n","export default __webpack_public_path__ + \"static/media/spinner.223e1344.gif\";","import spinner from './spinner.gif'\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\">\n            <img src={spinner} /> \n            <h1>Fetching Data</h1> \n        </div>\n    )\n}\n\nexport default Loader\n","import {Icon} from '@iconify/react'\nimport locationIcon from '@iconify/icons-mdi/fire-alert' \n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            <h1> <Icon icon={locationIcon} /> Disaster Tracker (Powered By NASA) </h1>\n        </header>\n    )\n}\n\nexport default Header\n","import Map from './components/Map'\nimport Loader from './components/Loader'\nimport Header from './components/Header'\nimport {useState, useEffect} from 'react' \n\nfunction App() {\n\n  const[eventData, setEventData] = useState([]) \n  const[loading, setLoading] = useState(false) \n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true) \n      const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events')\n      const {events} = await res.json()\n\n      setEventData(events) \n      setLoading(false)\n    }\n\n    fetchEvents()\n  }, [])\n  return (\n    <div>\n      <Header /> \n      {!loading ? <Map eventData={eventData} /> : <Loader />  }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrequire('dotenv').config() \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}